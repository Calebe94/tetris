name: Build and Release Game

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: /usr/include/SDL2
          key: sdl-deps-${{ hashFiles('**/*.cpp', '**/*.h') }}
          restore-keys: |
            sdl-deps-

      - name: Install Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev libsdl2-gfx-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-image-2.0-0

      - name: Install Emscripten SDK
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/emscripten-core/emsdk.git $HOME/emsdk
          cd $HOME/emsdk
          ./emsdk install latest
          ./emsdk activate latest

      - name: Build Game
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          source $HOME/emsdk/emsdk_env.sh
          make all

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release notes for ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Compress wasm folder
        run: tar czf wasm.tar.gz wasm

      - name: Upload Game and wasm to Release
        id: upload-assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/tetris
            wasm.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ steps.create_release.outputs.id }}
